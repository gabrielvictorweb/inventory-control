// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  password  String
  purchase  Purchase[]
  type      TypeUser   @relation(fields: [typeId], references: [id])
  typeId    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model TypeUser {
  id   Int    @id @default(autoincrement())
  name String
  user User[]
}

model Products {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  image       String
  price       String
  stock       Int
  Purchase    Purchase[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Purchase {
  id               Int             @id @default(autoincrement())
  quantity         Int
  author           User            @relation(fields: [authorId], references: [id])
  authorId         Int
  product          Products        @relation(fields: [productId], references: [id])
  productId        Int
  price            String
  StatusPurchase   StatusPurchase? @relation(fields: [statusPurchaseId], references: [id])
  statusPurchaseId Int?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model StatusPurchase {
  id       Int        @id @default(autoincrement())
  name     String
  purchase Purchase[]
}
